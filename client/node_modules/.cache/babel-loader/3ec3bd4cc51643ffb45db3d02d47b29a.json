{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\richg\\\\Documents\\\\Projects\\\\Op_Tracker\\\\client\\\\src\\\\context\\\\OperContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OperContext = /*#__PURE__*/createContext();\nexport const OperContextProvider = props => {\n  _s();\n\n  // Define state variables for all operations and commodities (prevents refetching data when adding or updating)\n  const [operations, setOperations] = useState([]);\n  const [commodities, setCommodities] = useState([]);\n\n  const addOperations = operation => {\n    setOperations([...operations, operation]);\n  };\n\n  const addCommodities = commodity => {\n    setCommodities([...commodities, commodity]);\n  };\n\n  return (\n    /*#__PURE__*/\n    // Setting a object with a key and value with the same name only requires typing the name once\n    _jsxDEV(OperContext.Provider, {\n      value: {\n        operations,\n        setOperations,\n        addOperations,\n        commodities,\n        setCommodities,\n        addCommodities\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(OperContextProvider, \"zU4t0EVQcSZRJ3kOCDlscmiyZ+w=\");\n\n_c = OperContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"OperContextProvider\");","map":{"version":3,"sources":["C:/Users/richg/Documents/Projects/Op_Tracker/client/src/context/OperContext.js"],"names":["React","useState","createContext","OperContext","OperContextProvider","props","operations","setOperations","commodities","setCommodities","addOperations","operation","addCommodities","commodity","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,aAAzB,QAA6C,OAA7C;;AAEA,OAAO,MAAMC,WAAW,gBAAGD,aAAa,EAAjC;AAEP,OAAO,MAAME,mBAAmB,GAAGC,KAAK,IAAI;AAAA;;AACxC;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMS,aAAa,GAAIC,SAAD,IAAe;AACjCJ,IAAAA,aAAa,CAAC,CAAC,GAAGD,UAAJ,EAAgBK,SAAhB,CAAD,CAAb;AACH,GAFD;;AAGA,QAAMC,cAAc,GAAIC,SAAD,IAAe;AAClCJ,IAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiBK,SAAjB,CAAD,CAAd;AACH,GAFD;;AAIA;AAAA;AACI;AACA,YAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEP,QAAAA,UAAF;AAAcC,QAAAA,aAAd;AAA6BG,QAAAA,aAA7B;AAA4CF,QAAAA,WAA5C;AAAyDC,QAAAA,cAAzD;AAAyEG,QAAAA;AAAzE,OAA7B;AAAA,gBACKP,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA;AAFJ;AAMH,CAlBM;;GAAMV,mB;;KAAAA,mB","sourcesContent":["import React, {useState, createContext} from \"react\";\r\n\r\nexport const OperContext = createContext();\r\n\r\nexport const OperContextProvider = props => {\r\n    // Define state variables for all operations and commodities (prevents refetching data when adding or updating)\r\n    const [operations, setOperations] = useState([]);\r\n    const [commodities, setCommodities] = useState([]);\r\n\r\n    const addOperations = (operation) => {\r\n        setOperations([...operations, operation])\r\n    };\r\n    const addCommodities = (commodity) => {\r\n        setCommodities([...commodities, commodity])\r\n    };\r\n\r\n    return (\r\n        // Setting a object with a key and value with the same name only requires typing the name once\r\n        <OperContext.Provider value={{ operations, setOperations, addOperations, commodities, setCommodities, addCommodities }}>\r\n            {props.children}\r\n        </OperContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}