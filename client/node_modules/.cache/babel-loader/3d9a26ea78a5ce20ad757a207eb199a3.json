{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\richg\\\\Documents\\\\Projects\\\\Op_Tracker\\\\client\\\\src\\\\components\\\\ModalOper.jsx\",\n    _s = $RefreshSig$();\n\n// This component is an appearing modal that is used to either update known entries for the Operations data (Card data) or \n//    create new ones, based on the boolean state, addModal, which is true for the latter and false for the former\nimport React, { useRef, useState, useContext, useEffect, useCallback } from 'react';\nimport operFinder from '../apis/operFinder';\nimport { OperContext } from '../context/OperContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ModalOper = _ref => {\n  _s();\n\n  let {\n    modalAdd,\n    showModal,\n    setShowModal,\n    operID\n  } = _ref;\n  // Call upon the operations state object from within Modal\n  const {\n    operations,\n    setOperations,\n    addOperations\n  } = useContext(OperContext); // Define a function for getting the current date in SQL format\n\n  const getDate = () => {\n    var today = new Date(); // Use padStart to ensure 0's for single digit days and months\n\n    var dd = String(today.getDate()).padStart(2, '0'); // Months in Date() start at 00 for January\n\n    var mmm = today.toLocaleString('en-US', {\n      month: 'short'\n    }).toUpperCase();\n    var yy = today.getFullYear().toString();\n    today = dd + mmm + yy.slice(2);\n    return today;\n  }; // Define internal state variables to use\n\n\n  const [requirement, setRequirement] = useState(\"\");\n  const [team, setTeam] = useState(\"\");\n  const [team_id, setTeam_ID] = useState(\"Team ID\");\n  const [obj_opn, setObj_Opn] = useState(\"\");\n  const [capability, setCapability] = useState(\"\");\n  const [progress, setProgress] = useState(\"Progress\");\n  const [status, setStatus] = useState(\"\"); // Had to change document(t) name because I was accidentally overwriting important JS document features...\n\n  const [documentt, setDocument] = useState(\"\");\n  const [category, setCategory] = useState(\"Category\");\n  const [completed, setCompleted] = useState(\"\");\n  const [bullet1, setBullet1] = useState(\"\");\n  const [bullet2, setBullet2] = useState(\"\");\n  const [bullet3, setBullet3] = useState(\"\");\n  const [bullet4, setBullet4] = useState(\"\");\n  const [bullet5, setBullet5] = useState(\"\");\n  const [poc, setPOC] = useState(\"\");\n  const [updatedD, setUpdated] = useState(getDate);\n  const firstRender = useRef(true); // Whenever the modal comes up (i.e., showModel becomes true): run the fetch request from the database if the modal is needed to update, or reset \n\n  useEffect(() => {\n    if (!firstRender) return;\n\n    if (showModal) {\n      // If the modal is used to add a new record, reset the feature values (in case the modal was previously used)\n      if (modalAdd) {\n        setRequirement(\"\");\n        setTeam(\"\");\n        setTeam_ID(\"Team ID\");\n        setObj_Opn(\"\");\n        setCapability(\"\");\n        setProgress(\"Progress\");\n        setStatus(\"\");\n        setDocument(\"\");\n        setCategory(\"Category\");\n        setCompleted(\"\");\n        setBullet1(\"\");\n        setBullet2(\"\");\n        setBullet3(\"\");\n        setBullet4(\"\");\n        setBullet5(\"\");\n        setPOC(\"\");\n        setUpdated(getDate);\n      } else {\n        // If the modal is used to update an existing record, fill in the feature values with what already exists.\n        const fetchData = async () => {\n          // Get data about the operation highlighted (set null values to \"\")\n          const response = await operFinder.get(`api/v1/operations/${operID}`);\n          setRequirement(response.data.data.requirement);\n          setTeam(response.data.data.team);\n          setTeam_ID(response.data.data.team_id);\n          setObj_Opn(response.data.data.obj_opn);\n          setCapability(response.data.data.capability);\n          setProgress(response.data.data.progress);\n          setStatus(response.data.data.status);\n          setDocument(response.data.data.document || \"\");\n          setCategory(response.data.data.category);\n          setCompleted(response.data.data.completed);\n          setBullet1(response.data.data.bullet1 || \"\");\n          setBullet2(response.data.data.bullet2 || \"\");\n          setBullet3(response.data.data.bullet3 || \"\");\n          setBullet4(response.data.data.bullet4 || \"\");\n          setBullet5(response.data.data.bullet5 || \"\");\n          setPOC(response.data.data.poc || \"\");\n          setUpdated(getDate);\n        };\n\n        fetchData();\n      }\n    }\n  }, [showModal]); // Need fade in and out for modal on every showModal change except initial render\n\n  useEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n    } else {\n      modalRef.current.className = showModal ? 'backFadeIn' : 'back FadeOut';\n    }\n  }, [showModal]); // Define function for modal submit\n\n  const handleSubmit = async e => {\n    // Don't reload page on submit\n    e.preventDefault();\n    console.log(updatedD); // Add a new record to the database\n\n    if (modalAdd) {\n      // Use a try-catch block with an asyncronous function\n      try {\n        // Post new entries to the Pool baseURL\n        // Need to change completion date if empty before uploading to SQL database.\n        const response = await operFinder.post(\"api/v1/operations/\", {\n          requirement,\n          team,\n          team_id,\n          obj_opn,\n          capability,\n          progress,\n          status,\n          documentt,\n          category,\n          completed: completed === \"\" ? null : completed,\n          bullet1,\n          bullet2,\n          bullet3,\n          bullet4,\n          bullet5,\n          poc,\n          updated: updatedD\n        });\n        addOperations(response.data.data);\n        console.log(response);\n      } catch (e) {\n        console.log(e);\n      }\n\n      ;\n    } else {\n      // Update database\n      // Need to change completion date if empty before uploading to SQL database.\n      const updateOperation = await operFinder.put(`api/v1/operations/${operID}`, {\n        requirement,\n        team,\n        team_id,\n        obj_opn,\n        capability,\n        progress,\n        status,\n        documentt,\n        category,\n        completed: completed === \"\" ? null : completed,\n        bullet1,\n        bullet2,\n        bullet3,\n        bullet4,\n        bullet5,\n        poc,\n        updated: updatedD\n      });\n      console.log(updateOperation); // Update operations context so cards show new results\n\n      const updateOper = {\n        id: operID,\n        requirement,\n        team,\n        team_id,\n        obj_opn,\n        capability,\n        progress,\n        status,\n        documentt,\n        category,\n        completed,\n        bullet1,\n        bullet2,\n        bullet3,\n        bullet4,\n        bullet5,\n        poc,\n        updatedD\n      };\n      setOperations(operations.map(el => el.id === updateOper.id ? updateOper : el));\n    } // Don't show modal after submit\n\n\n    setShowModal(!showModal);\n  }; // Close Modal if clicking on the background (i.e., outside the modal)\n\n\n  const modalRef = useRef();\n\n  const closeModal = e => {\n    if (modalRef.current === e.target) {\n      setShowModal(false);\n    }\n  }; // Set use to dismiss Modal on 'esc' key press only when Modal is up\n\n\n  const keyPress = useCallback(e => {\n    if (e.key === 'Escape' && showModal) {\n      setShowModal(false);\n    }\n  }, [showModal]);\n  useEffect(() => {\n    document.addEventListener('keydown', keyPress);\n    return () => document.removeEventListener('keydown', keyPress);\n  }, [keyPress]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"back\",\n    ref: modalRef,\n    onClick: closeModal,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ModalWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ModalContent\",\n        children: [modalAdd ? /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Add New Operation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Update Operation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 62\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"descriptor\",\n                htmlFor: \"modal_requirement\",\n                children: \"Requirement\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"modal_requirement\",\n                value: requirement,\n                onChange: e => setRequirement(e.target.value),\n                type: \"text\",\n                className: \"form-control required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"descr\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"warning-text\",\n                  children: \"Required Input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 52\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"descriptor\",\n                htmlFor: \"modal_team\",\n                children: \"Team\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"modal_team\",\n                value: team,\n                onChange: e => setTeam(e.target.value),\n                type: \"text\",\n                className: \"form-control required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"descr\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"warning-text\",\n                  children: \"Required Input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 52\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"descriptor\",\n                htmlFor: \"modal_team_id\",\n                children: \"Team ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"modal_team_id\",\n                value: team_id,\n                onChange: e => setTeam_ID(e.target.value),\n                className: \"custom-select required my-1 mr-sm-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  children: \"Team ID\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"AAA\",\n                  children: \"AAA\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"BBB\",\n                  children: \"BBB\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"CCC\",\n                  children: \"CCC\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"DDD\",\n                  children: \"DDD\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"EEE\",\n                  children: \"EEE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"FFF\",\n                  children: \"FFF\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"GGG\",\n                  children: \"GGG\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"HHH\",\n                  children: \"HHH\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"descr\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"warning-text\",\n                  children: \"Required Input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 52\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"descriptor\",\n                htmlFor: \"modal_obj_opn\",\n                children: \"Objective\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"modal_obj_opn\",\n                value: obj_opn,\n                onChange: e => setObj_Opn(e.target.value),\n                type: \"text\",\n                className: \"form-control required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"descr\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"warning-text\",\n                  children: \"Required Input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 52\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"descriptor\",\n                htmlFor: \"modal_progress\",\n                children: \"Progress \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"modal_progress\",\n                value: progress,\n                onChange: e => setProgress(e.target.value),\n                className: \"custom-select required my-1 mr-sm-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  children: \"Progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1\",\n                  children: \"Not Started\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"2\",\n                  children: \"Underway\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"3\",\n                  children: \"Deployed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"descr\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"warning-text\",\n                  children: \"Required Input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 52\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"descriptor\",\n                htmlFor: \"modal_status\",\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"modal_status\",\n                value: status,\n                onChange: e => setStatus(e.target.value),\n                type: \"text\",\n                className: \"form-control required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"descr\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"warning-text\",\n                  children: \"Required Input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 52\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"descriptor\",\n                htmlFor: \"modal_document\",\n                children: \"Document\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"modal_document\",\n                value: documentt,\n                onChange: e => setDocument(e.target.value),\n                type: \"text\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"descriptor\",\n                htmlFor: \"modal_category\",\n                children: \"Category \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                id: \"modal_category\",\n                value: category,\n                onChange: e => setCategory(e.target.value),\n                className: \"custom-select required my-1 mr-sm-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1\",\n                  children: \"Ongoing\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"2\",\n                  children: \"Requests\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"3\",\n                  children: \"Completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"descr\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"warning-text\",\n                  children: \"Required Input\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 52\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"descriptor\",\n                htmlFor: \"modal_completed\",\n                children: \"Completion Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"modal_completed\",\n                value: completed,\n                onChange: e => setCompleted(e.target.value),\n                type: \"date\",\n                className: \"form-control\",\n                min: \"2020-01-01\",\n                max: \"2050-01-01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"descriptor\",\n                htmlFor: \"modal_bullet1\",\n                children: \"Bullet Descriptor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"modal_bullet1\",\n                value: bullet1,\n                onChange: e => setBullet1(e.target.value),\n                type: \"text\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"descriptor\",\n                htmlFor: \"modal_bullet2\",\n                children: \"Bullet Descriptor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"modal_bullet2\",\n                value: bullet2,\n                onChange: e => setBullet2(e.target.value),\n                type: \"text\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"descriptor\",\n                htmlFor: \"modal_bullet3\",\n                children: \"Bullet Descriptor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"modal_bullet3\",\n                value: bullet3,\n                onChange: e => setBullet3(e.target.value),\n                type: \"text\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"descriptor\",\n                htmlFor: \"modal_bullet4\",\n                children: \"Bullet Descriptor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"modal_bullet4\",\n                value: bullet4,\n                onChange: e => setBullet4(e.target.value),\n                type: \"text\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"descriptor\",\n                htmlFor: \"modal_bullet5\",\n                children: \"Bullet Descriptor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"modal_bullet5\",\n                value: bullet5,\n                onChange: e => setBullet5(e.target.value),\n                type: \"text\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-4 mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"descriptor\",\n                htmlFor: \"modal_poc\",\n                children: \"Point of Contact\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"modal_poc\",\n                value: poc,\n                onChange: e => setPOC(e.target.value),\n                type: \"text\",\n                className: \"form-control\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: e => handleSubmit(e),\n            className: \"btn btn-dark align-content-center\",\n            children: modalAdd ? 'Add' : 'Update'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"CloseModalButton\",\n        \"aria-label\": \"Close Modal\",\n        onClick: () => setShowModal(!showModal),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-times\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 120\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ModalOper, \"4JGgfGKt4tX6F6rfn/UQNKUU/QE=\");\n\n_c = ModalOper;\nexport default ModalOper;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalOper\");","map":{"version":3,"sources":["C:/Users/richg/Documents/Projects/Op_Tracker/client/src/components/ModalOper.jsx"],"names":["React","useRef","useState","useContext","useEffect","useCallback","operFinder","OperContext","ModalOper","modalAdd","showModal","setShowModal","operID","operations","setOperations","addOperations","getDate","today","Date","dd","String","padStart","mmm","toLocaleString","month","toUpperCase","yy","getFullYear","toString","slice","requirement","setRequirement","team","setTeam","team_id","setTeam_ID","obj_opn","setObj_Opn","capability","setCapability","progress","setProgress","status","setStatus","documentt","setDocument","category","setCategory","completed","setCompleted","bullet1","setBullet1","bullet2","setBullet2","bullet3","setBullet3","bullet4","setBullet4","bullet5","setBullet5","poc","setPOC","updatedD","setUpdated","firstRender","fetchData","response","get","data","document","current","modalRef","className","handleSubmit","e","preventDefault","console","log","post","updated","updateOperation","put","updateOper","id","map","el","closeModal","target","keyPress","key","addEventListener","removeEventListener","value"],"mappings":"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","sourcesContent":["// This component is an appearing modal that is used to either update known entries for the Operations data (Card data) or \r\n//    create new ones, based on the boolean state, addModal, which is true for the latter and false for the former\r\n\r\nimport React, {useRef, useState, useContext, useEffect, useCallback } from 'react';\r\nimport operFinder from '../apis/operFinder';\r\nimport { OperContext } from '../context/OperContext';\r\n\r\nconst ModalOper = ({ modalAdd, showModal, setShowModal, operID }) => {\r\n    // Call upon the operations state object from within Modal\r\n    const { operations, setOperations, addOperations } = useContext(OperContext);\r\n\r\n    // Define a function for getting the current date in SQL format\r\n    const getDate = () => {\r\n        var today = new Date();\r\n        // Use padStart to ensure 0's for single digit days and months\r\n        var dd = String(today.getDate()).padStart(2, '0');\r\n        // Months in Date() start at 00 for January\r\n        var mmm = today.toLocaleString('en-US', {month: 'short'}).toUpperCase();\r\n        var yy = today.getFullYear().toString();\r\n    \r\n        today = dd + mmm + yy.slice(2);\r\n\r\n        return today\r\n    };\r\n\r\n    // Define internal state variables to use\r\n    const [ requirement, setRequirement ] = useState(\"\");\r\n    const [ team, setTeam ] = useState(\"\");\r\n    const [ team_id, setTeam_ID ] = useState(\"Team ID\");\r\n    const [ obj_opn, setObj_Opn ] = useState(\"\");\r\n    const [ capability, setCapability ] = useState(\"\");\r\n    const [ progress, setProgress ] = useState(\"Progress\");\r\n    const [ status, setStatus ] = useState(\"\");\r\n    // Had to change document(t) name because I was accidentally overwriting important JS document features...\r\n    const [ documentt, setDocument ] = useState(\"\");\r\n    const [ category, setCategory ] = useState(\"Category\");\r\n    const [ completed, setCompleted ] = useState(\"\");\r\n    const [ bullet1, setBullet1 ] = useState(\"\");\r\n    const [ bullet2, setBullet2 ] = useState(\"\");\r\n    const [ bullet3, setBullet3 ] = useState(\"\");\r\n    const [ bullet4, setBullet4 ] = useState(\"\");\r\n    const [ bullet5, setBullet5 ] = useState(\"\");\r\n    const [ poc, setPOC ] = useState(\"\");\r\n    const [ updatedD, setUpdated ] = useState(getDate);\r\n\r\n    const firstRender = useRef(true);\r\n    \r\n    // Whenever the modal comes up (i.e., showModel becomes true): run the fetch request from the database if the modal is needed to update, or reset \r\n    useEffect(() => {\r\n        if (!firstRender) return;\r\n        if (showModal)  {\r\n            // If the modal is used to add a new record, reset the feature values (in case the modal was previously used)\r\n            if (modalAdd) {\r\n                setRequirement(\"\");\r\n                setTeam(\"\");\r\n                setTeam_ID(\"Team ID\");\r\n                setObj_Opn(\"\");\r\n                setCapability(\"\");\r\n                setProgress(\"Progress\");\r\n                setStatus(\"\");\r\n                setDocument(\"\");\r\n                setCategory(\"Category\");\r\n                setCompleted(\"\");\r\n                setBullet1(\"\");\r\n                setBullet2(\"\");\r\n                setBullet3(\"\");\r\n                setBullet4(\"\");\r\n                setBullet5(\"\");\r\n                setPOC(\"\");\r\n                setUpdated(getDate);\r\n            } else {\r\n                // If the modal is used to update an existing record, fill in the feature values with what already exists.\r\n                const fetchData = async () => {\r\n                    // Get data about the operation highlighted (set null values to \"\")\r\n                    const response = await operFinder.get(`api/v1/operations/${operID}`);\r\n                    setRequirement(response.data.data.requirement);\r\n                    setTeam(response.data.data.team);\r\n                    setTeam_ID(response.data.data.team_id);\r\n                    setObj_Opn(response.data.data.obj_opn);\r\n                    setCapability(response.data.data.capability);\r\n                    setProgress(response.data.data.progress);\r\n                    setStatus(response.data.data.status);\r\n                    setDocument(response.data.data.document || \"\");\r\n                    setCategory(response.data.data.category);\r\n                    setCompleted(response.data.data.completed);\r\n                    setBullet1(response.data.data.bullet1 || \"\");\r\n                    setBullet2(response.data.data.bullet2 || \"\");\r\n                    setBullet3(response.data.data.bullet3 || \"\");\r\n                    setBullet4(response.data.data.bullet4 || \"\");\r\n                    setBullet5(response.data.data.bullet5 || \"\");\r\n                    setPOC(response.data.data.poc || \"\");\r\n                    setUpdated(getDate);\r\n                };\r\n                fetchData();\r\n            } \r\n        }\r\n    }, [showModal]);\r\n\r\n    // Need fade in and out for modal on every showModal change except initial render\r\n    useEffect(() => {\r\n        if ( firstRender.current ) {\r\n            firstRender.current = false\r\n        } else {\r\n            modalRef.current.className = showModal ? 'backFadeIn' : 'back FadeOut';\r\n        }\r\n    }, [showModal])\r\n\r\n    // Define function for modal submit\r\n    const handleSubmit = async (e) => {\r\n        // Don't reload page on submit\r\n        e.preventDefault();\r\n        console.log(updatedD);\r\n        // Add a new record to the database\r\n        if (modalAdd) {\r\n            // Use a try-catch block with an asyncronous function\r\n            try {\r\n                // Post new entries to the Pool baseURL\r\n                // Need to change completion date if empty before uploading to SQL database.\r\n                const response = await operFinder.post(\"api/v1/operations/\", {\r\n                    requirement,    team,   team_id,    obj_opn,    capability,     progress,   status,  documentt, category,\r\n                    completed: ( (completed === \"\") ? null : completed),  bullet1,    bullet2,    bullet3,    bullet4,    bullet5,    poc,  updated: updatedD,\r\n                });\r\n                addOperations(response.data.data);\r\n                console.log(response);\r\n            } catch (e) {\r\n                console.log(e);\r\n            };\r\n        } else {\r\n            // Update database\r\n\r\n            // Need to change completion date if empty before uploading to SQL database.\r\n            const updateOperation = await operFinder.put(`api/v1/operations/${operID}`, {\r\n                requirement,    team,   team_id,    obj_opn,    capability,     progress,   status,  documentt, category,\r\n                completed: ( (completed === \"\") ? null : completed),  bullet1,    bullet2,    bullet3,    bullet4,    bullet5,    poc,  updated: updatedD,\r\n            });\r\n            console.log(updateOperation);\r\n\r\n            // Update operations context so cards show new results\r\n            const updateOper = {id: operID, requirement,    team,   team_id,    obj_opn,    capability,     progress,   status,  documentt,\r\n                category,       completed,  bullet1,    bullet2,    bullet3,    bullet4,    bullet5,    poc,    updatedD};\r\n            setOperations(operations.map(el => el.id === updateOper.id ? updateOper : el));\r\n        }\r\n\r\n        // Don't show modal after submit\r\n        setShowModal(!showModal);\r\n    };\r\n    \r\n    // Close Modal if clicking on the background (i.e., outside the modal)\r\n    const modalRef = useRef();\r\n    const closeModal = e => {\r\n        if(modalRef.current === e.target) {\r\n            setShowModal(false);\r\n        }\r\n    }\r\n\r\n    // Set use to dismiss Modal on 'esc' key press only when Modal is up\r\n    const keyPress = useCallback(e => {\r\n        if(e.key === 'Escape' && showModal) {\r\n            setShowModal(false);\r\n        }\r\n    }, [ showModal ])\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('keydown', keyPress);\r\n        return () => document.removeEventListener('keydown', keyPress)\r\n    }, [keyPress])\r\n\r\n    return (\r\n        <div className='back' ref={modalRef} onClick={closeModal}>\r\n            <div className='ModalWrapper'>\r\n                <div className='ModalContent'>\r\n                    {modalAdd ? <h1>Add New Operation</h1> : <h1>Update Operation</h1>}\r\n                    \r\n                    <form action=\"\" className='container'>\r\n                        <div className='row'>\r\n                        <div className=\"col-4 mb-2\">\r\n                            <label className='descriptor' htmlFor=\"modal_requirement\">Requirement</label>\r\n                            <input id='modal_requirement' value={requirement} onChange={e => setRequirement(e.target.value)} type=\"text\" className='form-control required' />\r\n                            <div className='descr'><span className='warning-text'>Required Input</span></div>\r\n                        </div>\r\n                        <div className=\"col-4 mb-2\">\r\n                            <label className='descriptor' htmlFor=\"modal_team\">Team</label>\r\n                            <input id='modal_team' value={team} onChange={e => setTeam(e.target.value)} type=\"text\" className='form-control required' />\r\n                            <div className='descr'><span className='warning-text'>Required Input</span></div>\r\n                        </div>\r\n                        <div className=\"col-4 mb-2\">\r\n                            <label className='descriptor' htmlFor=\"modal_team_id\">Team ID</label>\r\n                            <select id='modal_team_id' value={team_id} onChange={e => setTeam_ID(e.target.value)} className='custom-select required my-1 mr-sm-2'>\r\n                                <option disabled>Team ID</option>\r\n                                <option value='AAA'>AAA</option>\r\n                                <option value='BBB'>BBB</option>\r\n                                <option value='CCC'>CCC</option>\r\n                                <option value='DDD'>DDD</option>\r\n                                <option value='EEE'>EEE</option>\r\n                                <option value='FFF'>FFF</option>\r\n                                <option value='GGG'>GGG</option>\r\n                                <option value='HHH'>HHH</option>\r\n                            </select>\r\n                            <div className='descr'><span className='warning-text'>Required Input</span></div>\r\n                        </div>\r\n                        <div className=\"col-4 mb-2\">\r\n                            <label className='descriptor' htmlFor=\"modal_obj_opn\">Objective</label>\r\n                            <input id='modal_obj_opn' value={obj_opn} onChange={e => setObj_Opn(e.target.value)} type=\"text\" className='form-control required' />\r\n                            <div className='descr'><span className='warning-text'>Required Input</span></div>\r\n                        </div>\r\n                        <div className=\"col-4 mb-2\">\r\n                            <label className='descriptor' htmlFor=\"modal_progress\">Progress </label>\r\n                            <select id='modal_progress' value={progress} onChange={e => setProgress(e.target.value)} className='custom-select required my-1 mr-sm-2'>\r\n                                <option disabled>Progress</option>\r\n                                <option value='1'>Not Started</option>\r\n                                <option value='2'>Underway</option>\r\n                                <option value='3'>Deployed</option>\r\n                            </select>\r\n                            <div className='descr'><span className='warning-text'>Required Input</span></div>\r\n                        </div>\r\n                        <div className=\"col-4 mb-2\">\r\n                            <label className='descriptor' htmlFor=\"modal_status\">Status</label>\r\n                            <input id='modal_status' value={status} onChange={e => setStatus(e.target.value)} type=\"text\" className='form-control required' />\r\n                            <div className='descr'><span className='warning-text'>Required Input</span></div>\r\n                        </div>\r\n                        <div className=\"col-4 mb-2\">\r\n                            <label className='descriptor' htmlFor=\"modal_document\">Document</label>\r\n                            <input id='modal_document' value={documentt} onChange={e => setDocument(e.target.value)} type=\"text\" className='form-control' />\r\n                        </div>\r\n                        <div className=\"col-4 mb-2\">\r\n                            <label className='descriptor' htmlFor=\"modal_category\">Category </label>\r\n                            <select id='modal_category' value={category} onChange={e => setCategory(e.target.value)} className='custom-select required my-1 mr-sm-2'>\r\n                                <option disabled>Category</option>\r\n                                <option value='1'>Ongoing</option>\r\n                                <option value='2'>Requests</option>\r\n                                <option value='3'>Completed</option>\r\n                            </select>\r\n                            <div className='descr'><span className='warning-text'>Required Input</span></div>\r\n                        </div>\r\n                        <div className=\"col-4 mb-2\">\r\n                            <label className='descriptor' htmlFor=\"modal_completed\">Completion Date</label>\r\n                            <input id='modal_completed' value={completed} onChange={e => setCompleted(e.target.value)} type=\"date\" className='form-control' min='2020-01-01' max='2050-01-01'/>\r\n                        </div>\r\n                        <div className=\"col-4 mb-2\">\r\n                            <label className='descriptor' htmlFor=\"modal_bullet1\">Bullet Descriptor</label>\r\n                            <input id='modal_bullet1' value={bullet1} onChange={e => setBullet1(e.target.value)} type=\"text\" className='form-control' />\r\n                        </div>\r\n                        <div className=\"col-4 mb-2\">\r\n                            <label className='descriptor' htmlFor=\"modal_bullet2\">Bullet Descriptor</label>\r\n                            <input id='modal_bullet2' value={bullet2} onChange={e => setBullet2(e.target.value)} type=\"text\" className='form-control' />\r\n                        </div>\r\n                        <div className=\"col-4 mb-2\">\r\n                            <label className='descriptor' htmlFor=\"modal_bullet3\">Bullet Descriptor</label>\r\n                            <input id='modal_bullet3' value={bullet3} onChange={e => setBullet3(e.target.value)} type=\"text\" className='form-control' />\r\n                        </div>\r\n                        <div className=\"col-4 mb-2\">\r\n                            <label className='descriptor' htmlFor=\"modal_bullet4\">Bullet Descriptor</label>\r\n                            <input id='modal_bullet4' value={bullet4} onChange={e => setBullet4(e.target.value)} type=\"text\" className='form-control' />\r\n                        </div>\r\n                        <div className=\"col-4 mb-2\">\r\n                            <label className='descriptor' htmlFor=\"modal_bullet5\">Bullet Descriptor</label>\r\n                            <input id='modal_bullet5' value={bullet5} onChange={e => setBullet5(e.target.value)} type=\"text\" className='form-control' />\r\n                        </div>\r\n                        <div className=\"col-4 mb-2\">\r\n                            <label className='descriptor' htmlFor=\"modal_poc\">Point of Contact</label>\r\n                            <input id='modal_poc' value={poc} onChange={e => setPOC(e.target.value)} type=\"text\" className='form-control' />\r\n                        </div>\r\n                        </div>\r\n                        <button type=\"submit\" onClick={(e) => handleSubmit(e)} className='btn btn-dark align-content-center'>{modalAdd ? 'Add' : 'Update'}</button>\r\n                    </form>\r\n                </div>\r\n                <button className='CloseModalButton' aria-label='Close Modal' onClick={() => setShowModal(!showModal)}><i className='fa fa-times' /></button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ModalOper;"]},"metadata":{},"sourceType":"module"}