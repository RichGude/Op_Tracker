{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\richg\\\\Documents\\\\Projects\\\\Op_Tracker\\\\client\\\\src\\\\components\\\\OperHeader.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { OperContext } from '../context/OperContext';\nimport { AuthoContext } from '../context/AuthContext';\nimport ProgressPoints from './ProgressPoints';\nimport BulletList from './BulletList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OperHeader = props => {\n  _s();\n\n  // Load Contexts\n  const {\n    operations,\n    setOperations\n  } = useContext(OperContext);\n  const {\n    isLoggedIn,\n    setIsLoggedIn\n  } = useContext(AuthoContext); // Determine update date of the Section from Category variable\n  // Table entries last updated will appear last in the operations array (since they're stored last), so filter\n  //    the operations array to only category values, and select the 'updated' value from the last operation\n\n  let headerDate = operations.filter(operation => operation.category === 1).at(-1).updated; // Determine Label of the Section from Category variable\n\n  let headerLabel = '';\n\n  switch (props.category) {\n    case 1:\n      headerLabel = 'Ongoing Technical Operations:';\n      break;\n\n    case 2:\n      headerLabel = 'Technical Operations Requests:';\n      break;\n\n    case 3:\n      headerLabel = 'Completed Technical Operations:';\n      break;\n  }\n\n  ;\n  let headerID = '';\n\n  switch (props.category) {\n    case 1:\n      headerID = 'Ongoing';\n      break;\n\n    case 2:\n      headerID = 'Requests:';\n      break;\n\n    case 3:\n      headerID = 'Completed';\n      break;\n  }\n\n  ; // Update Function: Open modal and fill with current operation data and push changes\n\n  const handleUpdate = (e, id) => {\n    props.setOperID(id);\n    props.setModalAdd(false);\n    props.setShowModal(!props.showModal);\n  }; // Add Function: Open modal and push changes\n\n\n  const handleAdd = e => {\n    props.setModalAdd(true);\n    props.setShowModal(!props.showModal);\n  }; // Filter the operations by their category\n\n\n  const filteredOps = operations.filter(elem => elem.category === props.category);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: headerID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sectionHead d-flex justify-content-between align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ongoing_title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: headerLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 41\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [filteredOps.length, \" Reports\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 63\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-toolbar mb-2 mb-md-0\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-outline-secondary calen\",\n          id: \"calen_ongoing\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"feather-calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }, this), \" \", headerDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"operCards row row-cols-3\",\n      children: [filteredOps.map(elem => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `card-header d-flex justify-content-between  ${elem.team_id}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: elem.requirement\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 25\n            }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => handleUpdate(e, elem.id),\n              className: \"btn btn-warning\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 39\n            }, this) : '', isLoggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => props.handleDelete(e, elem.id),\n              className: \"btn btn-danger\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 39\n            }, this) : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                children: \"Capability:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 50\n              }, this), \" \", elem.capability]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this), elem.bullet1 ? /*#__PURE__*/_jsxDEV(BulletList, {\n              elem: elem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 41\n            }, this) : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `card-footer d-flex justify-content-between align-items-center`,\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: elem.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(ProgressPoints, {\n                progress: elem.progress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 31\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this)]\n        }, elem.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this);\n      }), isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: e => handleAdd(e),\n        className: \"card-final\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"add-symbol\",\n          viewBox: \"0 0 3 3\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M1.4 1.0 h0.2 v0.4 h0.4 v0.2 h-0.4 v0.4 h-0.2 v-0.4 h-0.4 v-0.2 h0.4 z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OperHeader, \"izr5RcP0OUyE4xLr4LJcHjK/yMc=\");\n\n_c = OperHeader;\nexport default OperHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"OperHeader\");","map":{"version":3,"sources":["C:/Users/richg/Documents/Projects/Op_Tracker/client/src/components/OperHeader.jsx"],"names":["React","useContext","OperContext","AuthoContext","ProgressPoints","BulletList","OperHeader","props","operations","setOperations","isLoggedIn","setIsLoggedIn","headerDate","filter","operation","category","at","updated","headerLabel","headerID","handleUpdate","e","id","setOperID","setModalAdd","setShowModal","showModal","handleAdd","filteredOps","elem","length","map","team_id","requirement","handleDelete","capability","bullet1","status","progress"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport { OperContext } from '../context/OperContext';\r\nimport { AuthoContext } from '../context/AuthContext';\r\nimport ProgressPoints from './ProgressPoints';\r\nimport BulletList from './BulletList';\r\n\r\nconst OperHeader = (props) => {\r\n\r\n    // Load Contexts\r\n    const { operations, setOperations } = useContext(OperContext);\r\n    const { isLoggedIn, setIsLoggedIn } = useContext(AuthoContext);\r\n\r\n    // Determine update date of the Section from Category variable\r\n    // Table entries last updated will appear last in the operations array (since they're stored last), so filter\r\n    //    the operations array to only category values, and select the 'updated' value from the last operation\r\n    let headerDate = operations.filter(operation => operation.category === 1).at(-1).updated;\r\n\r\n    // Determine Label of the Section from Category variable\r\n    let headerLabel = '';\r\n    switch (props.category) {\r\n        case 1:     headerLabel = 'Ongoing Technical Operations:'; break;\r\n        case 2:     headerLabel = 'Technical Operations Requests:'; break;\r\n        case 3:     headerLabel = 'Completed Technical Operations:'; break;\r\n    };\r\n\r\n    let headerID = '';\r\n    switch (props.category) {\r\n        case 1:     headerID = 'Ongoing'; break;\r\n        case 2:     headerID = 'Requests:'; break;\r\n        case 3:     headerID = 'Completed'; break;\r\n    };\r\n\r\n    // Update Function: Open modal and fill with current operation data and push changes\r\n    const handleUpdate = (e, id) => {\r\n        props.setOperID(id);\r\n        props.setModalAdd(false);\r\n        props.setShowModal(!props.showModal);\r\n    };\r\n\r\n    // Add Function: Open modal and push changes\r\n    const handleAdd = (e) => {\r\n        props.setModalAdd(true);\r\n        props.setShowModal(!props.showModal);\r\n    };\r\n\r\n    // Filter the operations by their category\r\n    const filteredOps = operations.filter((elem) => elem.category === props.category);\r\n\r\n    return (<>\r\n        <div id={headerID} ></div>\r\n            <div className=\"sectionHead d-flex justify-content-between align-items-center\">\r\n                <div id='ongoing_title'><h2>{headerLabel}</h2><h4>{filteredOps.length} Reports</h4></div>\r\n                <div className=\"btn-toolbar mb-2 mb-md-0\">\r\n                <button type=\"button\" className=\"btn btn-outline-secondary calen\" id='calen_ongoing'>\r\n                    <span className=\"feather-calendar\"></span> {headerDate}\r\n                </button>\r\n                </div>\r\n            </div>\r\n            <div className=\"operCards row row-cols-3\">\r\n            {filteredOps.map((elem) => {\r\n                return (\r\n                <div key={elem.id} className=\"card\">\r\n                    <div className={`card-header d-flex justify-content-between  ${elem.team_id}`}>\r\n                        <span><b>{elem.requirement}</b></span>\r\n                        {isLoggedIn ? <button onClick={(e) => handleUpdate(e, elem.id)} className='btn btn-warning'>Update</button> : ''}\r\n                        {isLoggedIn ? <button onClick={(e) => props.handleDelete(e, elem.id)} className='btn btn-danger'>Delete</button> : ''}\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <p className=\"card-text\"><i>Capability:</i> {elem.capability}</p>\r\n                        {elem.bullet1 ? <BulletList elem={elem} /> : ''}\r\n                    </div>\r\n                    <div className={`card-footer d-flex justify-content-between align-items-center`}>\r\n                        <b>{elem.status}</b>\r\n                        <span><ProgressPoints progress={elem.progress}/></span>\r\n                    </div>\r\n                </div>\r\n            );})}\r\n            {/* Add a final card for adding new records */}\r\n            {isLoggedIn ? (\r\n            <div onClick={(e) => handleAdd(e)} className=\"card-final\">\r\n                <svg className=\"add-symbol\" viewBox='0 0 3 3'>\r\n                    <path d=\"M1.4 1.0 h0.2 v0.4 h0.4 v0.2 h-0.4 v0.4 h-0.2 v-0.4 h-0.4 v-0.2 h0.4 z\" />\r\n                </svg>\r\n            </div>\r\n            ) : ''}\r\n            </div>\r\n    </>);\r\n};\r\n\r\nexport default OperHeader;"]},"metadata":{},"sourceType":"module"}